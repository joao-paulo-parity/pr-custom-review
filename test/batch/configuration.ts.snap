// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Configuration Configuration is invalid if check_type is missing 1`] = `
Array [
  "ERROR:  Configuration file is invalid",
  "[Error [ValidationError]: \\"rules[0].check_type\\" is required] {
  _original: { rules: [ [Object] ] },
  details: [
    {
      message: '\\"rules[0].check_type\\" is required',
      path: [Array],
      type: 'any.required',
      context: [Object]
    }
  ]
}",
]
`;

exports[`Configuration Configuration is invalid if condition is missing 1`] = `
Array [
  "ERROR:  Configuration file is invalid",
  "[Error [ValidationError]: \\"rules[0].condition\\" is required] {
  _original: { rules: [ [Object] ] },
  details: [
    {
      message: '\\"rules[0].condition\\" is required',
      path: [Array],
      type: 'any.required',
      context: [Object]
    }
  ]
}",
]
`;

exports[`Configuration Configuration is invalid if locksReviewTeam is empty or missing 1`] = `
Array [
  "ERROR:  Locks review team should be provided",
]
`;

exports[`Configuration Configuration is invalid if min_approvals is less than 1 1`] = `
Array [
  "ERROR:  Configuration file is invalid",
  "[Error [ValidationError]: \\"rules[0].min_approvals\\" must be greater than or equal to 1] {
  _original: { rules: [ [Object] ] },
  details: [
    {
      message: '\\"rules[0].min_approvals\\" must be greater than or equal to 1',
      path: [Array],
      type: 'number.min',
      context: [Object]
    }
  ]
}",
]
`;

exports[`Configuration Configuration is invalid if min_approvals is missing 1`] = `
Array [
  "ERROR:  Configuration file is invalid",
  "[Error [ValidationError]: \\"rules[0].name\\" must be a string] {
  _original: { rules: [ [Object] ] },
  details: [
    {
      message: '\\"rules[0].name\\" must be a string',
      path: [Array],
      type: 'string.base',
      context: [Object]
    }
  ]
}",
]
`;

exports[`Configuration Configuration is invalid if name is missing 1`] = `
Array [
  "ERROR:  Configuration file is invalid",
  "[Error [ValidationError]: \\"rules[0].name\\" is required] {
  _original: { rules: [ [Object] ] },
  details: [
    {
      message: '\\"rules[0].name\\" is required',
      path: [Array],
      type: 'any.required',
      context: [Object]
    }
  ]
}",
]
`;
